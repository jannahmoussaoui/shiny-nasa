theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00"))
ggsave("grid_before.pdf", plot = b_grid, width = 20, height = 15, units = "in", dpi = 300)
# Create a grid of bar plots with adjusted panel spacing, centered strip text, and colored strip text.y
a_grid <- ggplot(subset_a, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00"))
ggsave("grid_after.pdf", plot = a_grid, width = 20, height = 15, units = "in", dpi = 300)
# Create a grid of bar plots with adjusted panel spacing, centered strip text, and colored strip text.y
b_grid <- ggplot(subset_b, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00")) +
geom_rect(data = subset_b %>% filter(profile %in% c("tom", "abby")),
aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, fill = profile),
alpha = 0.2,
inherit.aes = FALSE)
ggsave("grid_before.pdf", plot = b_grid, width = 20, height = 15, units = "in", dpi = 300)
# Create a grid of bar plots with adjusted panel spacing, centered strip text, and colored strip text.y
a_grid <- ggplot(subset_a, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00")) +
geom_rect(data = subset_a %>% filter(profile %in% c("tom", "abby")),
aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, fill = profile),
alpha = 0.2,
inherit.aes = FALSE)
ggsave("grid_after.pdf", plot = a_grid, width = 20, height = 15, units = "in", dpi = 300)
## Create a grid of bar plots with adjusted panel spacing, centered strip text, and colored strip text.y
b_grid <- ggplot(subset_b, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00")) +
geom_rect(data = subset_b %>% filter(profile %in% c("tom", "abby")),
aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, fill = profile),
alpha = 0.2,
inherit.aes = FALSE)
ggsave("grid_before.pdf", plot = b_grid, width = 20, height = 15, units = "in", dpi = 300)
# Create a grid of bar plots with adjusted panel spacing, centered strip text, and colored strip text.y
a_grid <- ggplot(subset_a, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00")) +
geom_rect(data = subset_a %>% filter(profile %in% c("tom", "abby")),
aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, fill = profile),
alpha = 0.2,
inherit.aes = FALSE)
ggsave("grid_after.pdf", plot = a_grid, width = 20, height = 15, units = "in", dpi = 300)
a_grid <- ggplot(subset_a, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00")) +
geom_rect(data = subset_a %>% filter(profile == "tom" | profile == "abby"),
aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, fill = profile),
alpha = 0.2,
inherit.aes = FALSE)
ggsave("grid_after.pdf", plot = a_grid, width = 20, height = 15, units = "in", dpi = 300)
b_grid <- ggplot(subset_b, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00")) +
geom_rect(data = subset_b, aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, fill = profile)) +
scale_fill_manual(profile = c("tom" = "lightblue", "abby" = "pink"))
b_grid <- ggplot(subset_b, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
geom_rect(data = subset_b, aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, fill = profile), alpha = 0.2) +
scale_fill_manual(values = c("tom" = "lightblue", "abby" = "pink"))
ggsave("grid_before.pdf", plot = b_grid, width = 20, height = 15, units = "in", dpi = 300)
library(tidyverse)
library(ggplot2)
library(dplyr)
# read in the coded behavior data
# rename columns
# replace NA with 0
bx_data <- read.csv("PredictionWhy.csv") %>%
select(Participant.ID, Tx, Game., Move., QID, Used.current.game.state, Used.prior.actions, Used.prior.explanation) %>%
filter(QID == "Why-Predict") %>%
mutate_all(~replace(., is.na(.), 0)) %>%
rename_with(~ "Game State", 6) %>%
rename_with(~ "Prior Actions", 7) %>%
rename_with(~ "Prior Explanation", 8) %>%
rename_with(~ "Game", 3) %>%
rename_with(~ "Move", 4) %>%
mutate(TrialName = paste(Game, Move, sep = "")) #this adds a new column concatenating Game and Move
# read before data in and rename columns
before_facet <- read.csv("BEFORE Data - GM Facets.csv")
before_facet <- before_facet %>%
rename_with(~ "Q1a", 2) %>%
rename_with(~ "Q1b", 3) %>%
rename_with(~ "Q1c", 4) %>%
rename_with(~ "Q1d", 5) %>%
rename_with(~ "Q1e", 6) %>%
rename_with(~ "Q1f", 7) %>%
rename_with(~ "Q1g", 8) %>%
rename_with(~ "Q2", 9) %>%
rename_with(~ "Q3", 10) %>%
rename_with(~ "Q4", 11) %>%
rename_with(~ "Q5", 12) %>%
rename_with(~ "Q6", 13) %>%
rename_with(~ "Q7", 14) %>%
rename_with(~ "Q8", 15) %>%
rename_with(~ "Q9", 16) %>%
rename_with(~ "Q10", 17) %>%
rename_with(~ "Q11", 18) %>%
rename_with(~ "Q12", 19) %>%
rename_with(~ "Q13", 20) %>%
rename_with(~ "Q14", 21)
# add columns summing the info processing items and classifying abby vs. tom
before_facet$Tx <- "B"
before_facet$info_processing <- rowSums(before_facet[, c("Q9", "Q10", "Q11")], na.rm = TRUE)
mean(before_facet$info_processing) # 21.97059
before_facet <- before_facet %>%
mutate(profile = case_when(info_processing >= 21.97059 ~ "abby",
info_processing < 21.97059 ~ "tom"))
print(before_facet %>%
group_by(profile) %>%
summarize(count = n())) # 11 Tom and 23 Abby
# now do the same with after
after_facet <- read.csv("AFTER Data - GM Facet.csv")
after_facet <- na.omit(after_facet)
after_facet <- after_facet %>%
rename_with(~ "Q1a", 2) %>%
rename_with(~ "Q1b", 3) %>%
rename_with(~ "Q1c", 4) %>%
rename_with(~ "Q1d", 5) %>%
rename_with(~ "Q1e", 6) %>%
rename_with(~ "Q1f", 7) %>%
rename_with(~ "Q1g", 8) %>%
rename_with(~ "Q2", 9) %>%
rename_with(~ "Q3", 10) %>%
rename_with(~ "Q4", 11) %>%
rename_with(~ "Q5", 12) %>%
rename_with(~ "Q6", 13) %>%
rename_with(~ "Q7", 14) %>%
rename_with(~ "Q8", 15) %>%
rename_with(~ "Q9", 16) %>%
rename_with(~ "Q10", 17) %>%
rename_with(~ "Q11", 18) %>%
rename_with(~ "Q12", 19) %>%
rename_with(~ "Q13", 20) %>%
rename_with(~ "Q14", 21)
after_facet$Tx <- "A"
after_facet$info_processing <- rowSums(after_facet[, c("Q9", "Q10", "Q11")], na.rm = TRUE)
mean(after_facet$info_processing) # 22.05882
after_facet <- after_facet %>%
mutate(profile = case_when(info_processing >= 22.05882 ~ "abby",
info_processing < 22.05882 ~ "tom"))
print(after_facet %>%
group_by(profile) %>%
summarize(count = n())) # 14 Tom and 20 Abby
# Now we're going to want to create a master data frame. We can only combine 2 data frames at a time
# Use rbind to stack the facet data frames...all columns have to be the same, we're just adding rows below
before_after_facet <- rbind(before_facet, after_facet)
# Now we merge the combined before and after facets. We use merge instead of rbind because merge allows us to put data frames by side by side, allowing for different columns
# While we're at it, let's also pivot the three columns into long form, placing them under a "Info_Used" column and butting their values in "value"
master_data <- merge(bx_data, before_after_facet, all.x = TRUE) %>%
pivot_longer(cols = c("Game State", "Prior Actions", "Prior Explanation"),
names_to = "Info_Used",
values_to = "value")
# Create a histogram for info processing facets for before
ggplot(before_facet, aes(x = info_processing, fill = cut(info_processing, breaks = c(-Inf, 21.97059, Inf), labels = c("tom", "abby")))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7) +
scale_fill_manual(values = c("tom" = "lightblue", "abby" = "pink")) +
labs(x = "Info Processing Facet", y = "Frequency", title = "Before Prototype", fill = "Profile") +
theme_minimal() +
geom_text(
stat = "count",
aes(label = ..count..),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 4)
# do the same with after
ggplot(after_facet, aes(x = info_processing, fill = cut(info_processing, breaks = c(-Inf, 22.05882, Inf), labels = c("tom", "abby")))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7) +
scale_fill_manual(values = c("tom" = "lightblue", "abby" = "pink")) +
labs(x = "Info Processing Facet", y = "Frequency", title = "After Prototype", fill = "Profile") +
theme_minimal() +
geom_text(
stat = "count",
aes(label = ..count..),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 4)
# To make graphing easier, we'll subset the master dataframe
subset_b <- subset(master_data, Tx == "B")
subset_a <- subset(master_data, Tx == "A")
# We'll also define the order we want the trials
desired_order <- c("G1M0", "G1M2", "G1M4", "G1M6", "G1M8", "G1M10", "G2M1", "G2M3", "G2M5", "G2M7", "G2M9", "G3M0", "G3M2", "G3M4", "G3M6", "G3M8", "G3M10", "G3M12")
# Convert TrialName to a factor with the desired order
subset_b$TrialName <- factor(subset_b$TrialName, levels = desired_order)
subset_a$TrialName <- factor(subset_a$TrialName, levels = desired_order)
# Create a grid of bar plots
b_grid <- ggplot(subset_b, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = .5, size = 10, face = "bold"),
panel.spacing.x = unit(1.5, "lines")
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00"))
ggsave("grid_before.pdf", plot = b_grid, width = 20, height = 15, units = "in", dpi = 300)
# Create a grid of bar plots
b_grid <- ggplot(subset_b, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = .5, size = 10, face = "bold"),
panel.spacing.x = unit(1.5, "lines")
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00"))
ggsave("grid_before.pdf", plot = b_grid, width = 20, height = 15, units = "in", dpi = 300)
# Create a grid of bar plots
a_grid <- ggplot(subset_a, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = .5, size = 10, face = "bold"),
panel.spacing.x = unit(1.5, "lines")
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00"))
ggsave("grid_after.pdf", plot = a_grid, width = 20, height = 15, units = "in", dpi = 300)
# Create a grid of bar plots with adjusted panel spacing, centered strip text, and colored strip text.y
b_grid <- ggplot(subset_b, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00"))
ggsave("grid_before.pdf", plot = b_grid, width = 20, height = 15, units = "in", dpi = 300)
# Create a grid of bar plots with adjusted panel spacing, centered strip text, and colored strip text.y
a_grid <- ggplot(subset_a, aes(x = Info_Used, y = value, fill = Info_Used)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(Participant.ID ~ TrialName, scales = "free_y", space = "free_y") +
labs(x = "", y = "", fill = "Info_Used") +
theme_minimal() +
theme(
axis.text.x = element_text(size = 0),
axis.text.y = element_text(size = 0),
strip.text.y = element_text(angle = 0, hjust = 1, size = 10, face = "bold"),
strip.text.x = element_text(angle = 0, hjust = 0.5, size = 10, face = "bold"),  # Centered strip text
panel.spacing.x = unit(1.5, "lines")  # Adjust the spacing between facet columns
) +
scale_fill_manual(values = c("Game State" = "#390099", "Prior Actions" = "#ff0054", "Prior Explanation" = "#ffbd00"))
ggsave("grid_after.pdf", plot = a_grid, width = 20, height = 15, units = "in", dpi = 300)
library(readxl)
library(tidyverse)
library(ggplot2)
dat <- read_excel("rawdata.xlsx")
# Logistic models...can print and summarize these (this is for the volunteer question)
logistic_model1 <- glm(Volunteering_decision_0NO_1YES ~ Meaningfulness_on_bullshit_sentences, data = dat, family = binomial)
logistic_model2 <- glm(Volunteering_decision_0NO_1YES ~ Meaningfulness_on_genuine_sentences, data = dat, family = binomial)
logistic_model3 <- glm(Volunteering_decision_0NO_1YES ~ Bullshit_sensitivity, data = dat, family = binomial)
print(logistic_model1)
print(logistic_model2)
print(logistic_model3)
summary(logistic_model1)
summary(logistic_model2)
summary(logistic_model3)
# Draw a plot for all three, start with BS Receptivity
combined_plot1 <- ggplot(dat, aes(x = Meaningfulness_on_bullshit_sentences, y = Volunteering_decision_0NO_1YES)) +
geom_point() +
geom_smooth(aes(color = "Model 1"), method = "glm", method.args = list(family = "binomial"), se = FALSE) +
labs(title = "Logistic Regression: Volunteering Decision ~ Meaningfulness/Sensitivity",
x = "Meaningfulness/Sensitivity",
y = "Volunteering Decision (0=NO, 1=YES)") +
theme_minimal()
# P receptivity and BS sensitivity
combined_plot1 <- combined_plot1 +
geom_smooth(data = dat, aes(x = Meaningfulness_on_genuine_sentences, y = Volunteering_decision_0NO_1YES, color = "Model 2"),
method = "glm", method.args = list(family = "binomial"), se = FALSE) +
geom_smooth(data = dat, aes(x = Bullshit_sensitivity, y = Volunteering_decision_0NO_1YES, color = "Model 3"),
method = "glm", method.args = list(family = "binomial"), se = FALSE)
# Combine
combined_plot1 <- combined_plot1 +
scale_color_manual(values = c("Model 1" = "blue", "Model 2" = "red", "Model 3" = "purple"),
name = "Models",
labels = c("BS-Receptivity", "P-Receptivity", "BS-Sensitivity"))
# Print the whole thing
print(combined_plot1)
setwd()
getwd()
setwd(C:\_MYWORK\xFTM\ftm_shinynasa\NASA_Survey)
setwd(C:/_MYWORK/xFTM\/ftm_shinynasa/NASA_Survey)
setwd("C:/_MYWORK/xFTM/ftm_shinynasa")
shiny::runApp('NASA_Survey')
# Authenticate with Google Sheets API
gs4_deauth()
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
install.packages(googledrive)
install.packages("googledrive")
install.packages("googledrive")
shiny::runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
library(googlesheets4)
read_sheet("https://docs.google.com/spreadsheets/d/1XvwU5RxdHTjB_kiEZeGXBxE_3s46905HjsPilRfMZ2g/edit#gid=0")
library(googlesheets4)
read_sheet("https://docs.google.com/spreadsheets/d/1XvwU5RxdHTjB_kiEZeGXBxE_3s46905HjsPilRfMZ2g/edit#gid=0")
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
gs4_deauth()
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
runApp('NASA_Survey')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
# Authenticate using the service account token
setwd("C:/_MYWORK/xFTM/ftm_shinynasa/NASA_Survey")
gs4_auth(path = './nasa-survey-pcplab-2e863dfe7055.json')
gs4_auth_configure()
# Load the googlesheets4 library
library(googlesheets4)
# Replace these values with your actual information
service_account_path <- "pC:/_MYWORK/xFTM/ftm_shinynasa/NASA_Survey/.gitignore/nasa-survey-pcplab-2e863dfe7055.json"
service_account_email <- "jannah@nasa-survey-pcplab.iam.gserviceaccount.com"
# Configure authentication using a service account JSON key file
gs4_auth_configure(
path = service_account_path,
email = service_account_email,
scopes = "https://www.googleapis.com/auth/spreadsheets",
cache = TRUE
)
# Load the googlesheets4 library
library(googlesheets4)
# Replace these values with your actual information
service_account_path <- "pC:/_MYWORK/xFTM/ftm_shinynasa/NASA_Survey/.gitignore/nasa-survey-pcplab-2e863dfe7055.json"
service_account_email <- "jannah@nasa-survey-pcplab.iam.gserviceaccount.com"
# Configure authentication using a service account JSON key file
gs4_auth_configure(
path = service_account_path,
email = service_account_email,
cache = TRUE
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
drive_deauth()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
gs4_auth_check()
gs4_auth()
drive_deauth()
gs4_deauth()
setwd(app_directory)
getwd()
setwd("C:/_MYWORK/xFTM/ftm_shinynasa/NASA_Survey")
getwd()
gs4_auth(email = "jannahmoussaoui@gmail.com", cache = ".secrets")
gs4_auth(email = "jannahmoussaoui@gmail.com", cache = ".secrets")
gs4_auth(cache = ".secrets", email = "debruine@gmail.com")
runApp()
load("C:/_MYWORK/xFTM/ftm_shinynasa/NASA_Survey/.RData")
gs4_auth(email = "jannahmoussaoui@gmail.com", cache = ".secrets")
library(googlesheets4)
gs4_auth(email = "jannahmoussaoui@gmail.com", cache = ".secrets")
getwd()
gs4_deauth()
gs4_auth(email = "jannahmoussaoui@gmail.com", cache = ".secrets")
