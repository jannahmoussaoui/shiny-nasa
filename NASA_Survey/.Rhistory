# Upon submission, print a data frame with participant responses
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
shinyApp(ui, server)
}
if (interactive()) {
library(shiny)
ui <- fluidPage(
surveyOutput(teaching_r_questions)
)
server <- function(input, output, session) {
renderSurvey()
# Upon submission, print a data frame with participant responses
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
shinyApp(ui, server)
}
if (interactive()) {
library(shiny)
ui <- fluidPage(
surveyOutput(teaching_r_questions)
)
server <- function(input, output, session) {
renderSurvey()
# Upon submission, print a data frame with participant responses
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
shinyApp(ui, server)
}
if (interactive()) {
library(shiny)
ui <- fluidPage(
surveyOutput(teaching_r_questions)
)
server <- function(input, output, session) {
renderSurvey()
# Upon submission, print a data frame with participant responses
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
shinyApp(ui, server)
}
# Load packages
library(shiny)
library(shinysurveys)
# Register a "check" input type
extendInputType("check", {
shiny::checkboxGroupInput(
inputId = surveyID(),
label = surveyLabel(),
choices = surveyOptions(),
)
})
# Define question in the format of a shinysurvey
ice_cream_question <- data.frame(
question = "Please indicate which of the following are your top three favorite ice cream flavors.",
option = c("Chocolate", "Vanilla", "Strawberry",
"Mint Chocolate Chip", "Rocky Road", "Cookie Batter",
"Hazelnut", "Cookies N' Cream", "Pistachio"),
input_type = "check",
input_id = "favorite_ice_cream",
dependence = NA,
dependence_value = NA,
required = TRUE
)
# Define shiny UI
ui <- fluidPage(
surveyOutput(ice_cream_question,
survey_title = "Hello, World!")
)
# Define shiny server
server <- function(input, output, session) {
renderSurvey()
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
}
# Run the shiny application
shinyApp(ui, server)
# Load packages
library(shiny)
library(shinysurveys)
# Register a "check" input type
extendInputType("check", {
shiny::checkboxGroupInput(
inputId = surveyID(),
label = surveyLabel(),
choices = surveyOptions(),
)
})
# Define question in the format of a shinysurvey
ice_cream_question <- data.frame(
question = "Please indicate which of the following are your top three favorite ice cream flavors.",
option = c("Chocolate", "Vanilla", "Strawberry",
"Mint Chocolate Chip", "Rocky Road", "Cookie Batter",
"Hazelnut", "Cookies N' Cream", "Pistachio"),
input_type = "check",
input_id = "favorite_ice_cream",
dependence = NA,
dependence_value = NA,
required = TRUE
)
# Define shiny UI
ui <- fluidPage(
surveyOutput(ice_cream_question,
survey_title = "Hello, World!")
)
# Define shiny server
server <- function(input, output, session) {
renderSurvey()
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
}
# Run the shiny application
shinyApp(ui, server)
library(shiny)
library(shinysurveys)
if (interactive()) {
df <- data.frame(
question = c("Session ID:",
"Code name:",
"Group:",
rep("Box of matches", 15),
rep("Food concentrate", 15),
rep("50 feet of nylon rope", 15),
rep("Parachute silk", 15),
rep("Portable heating unit", 15),
rep("Two .45 caliber pistol", 15),
rep("Once case of dehydrated milk", 15),
rep("Two 100 lb. tanks of oxygen", 15),
rep("Stellar map", 15),
rep("Self-inflating life raft", 15),
rep("Magnetic compass", 15),
rep("20 liters of water", 15),
rep("Signal flares", 15),
rep("First aid kit, including injection needle", 15),
rep("Solar-powered FM receiver-transmitter", 15)),
option = c(NA,
NA,
NA,
rep(c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"), 15)),
input_type = c("text",
"text",
"text",
rep("matrix", 225)),
# For matrix questions, the IDs should be the same for each question
# but different for each matrix input unit
input_id = c("session_id", "code_name", "group", rep("nasa_matrix", 225)),
dependence = NA,
dependence_value = NA,
required = FALSE
)
ui <- fluidPage(
surveyOutput(df,
survey_title = "NASA Exercise: Survival on the Moon",
survey_description = "You are a member of a space crew originally scheduled to rendezvous with a mother ship on the lighted surface of the moon. However, due to mechanical difficulties, your ship was forced to land at a spot some 200 miles from the rendezvous point. During reentry and landing, much of the equipment aboard was damaged and, since survival depends on reaching the mother ship, the most critical items available must be chosen for the 200-mile trip. Below are listed the 15 items left intact and undamaged after landing. Your task is to rank order them in terms of their importance for your crew in allowing them to reach the rendezvous point. Place the number 1 by the most important item, the number 2 by the second most important, and so on through number 15 for the least important")
)
server <- function(input, output, session) {
renderSurvey()
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
}
shinyApp(ui, server)
}
df <- data.frame(
question = c("Session ID:",
"Code name:",
"Group:",
rep("Box of matches", 15),
rep("Food concentrate", 15),
rep("50 feet of nylon rope", 15),
rep("Parachute silk", 15),
rep("Portable heating unit", 15),
rep("Two .45 caliber pistol", 15),
rep("Once case of dehydrated milk", 15),
rep("Two 100 lb. tanks of oxygen", 15),
rep("Stellar map", 15),
rep("Self-inflating life raft", 15),
rep("Magnetic compass", 15),
rep("20 liters of water", 15),
rep("Signal flares", 15),
rep("First aid kit, including injection needle", 15),
rep("Solar-powered FM receiver-transmitter", 15)),
option = c(NA,
NA,
NA,
rep(c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"), 15)),
input_type = c("text",
"text",
"text",
rep("matrix", 225)),
# For matrix questions, the IDs should be the same for each question
# but different for each matrix input unit
input_id = c("session_id", "code_name", "group", rep("nasa_matrix", 225)),
dependence = NA,
dependence_value = NA,
required = FALSE
)
library(shiny)
library(shinysurveys)
if (interactive()) {
df <- data.frame(
question = c("Session ID:",
"Code name:",
"Group:",
rep("Box of matches", 15),
rep("Food concentrate", 15),
rep("50 feet of nylon rope", 15),
rep("Parachute silk", 15),
rep("Portable heating unit", 15),
rep("Two .45 caliber pistol", 15),
rep("Once case of dehydrated milk", 15),
rep("Two 100 lb. tanks of oxygen", 15),
rep("Stellar map", 15),
rep("Self-inflating life raft", 15),
rep("Magnetic compass", 15),
rep("20 liters of water", 15),
rep("Signal flares", 15),
rep("First aid kit, including injection needle", 15),
rep("Solar-powered FM receiver-transmitter", 15)),
option = c(NA,
NA,
NA,
rep(c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"), 15)),
input_type = c("text",
"text",
"text",
rep("matrix", 225)),
# For matrix questions, the IDs should be the same for each question
# but different for each matrix input unit
input_id = c("session_id", "code_name", "group", rep("nasa_matrix", 225)),
dependence = NA,
dependence_value = NA,
required = FALSE
)
ui <- fluidPage(
surveyOutput(df,
survey_title = "NASA Exercise: Survival on the Moon",
survey_description = "You are a member of a space crew originally scheduled to rendezvous with a mother ship on the lighted surface of the moon. However, due to mechanical difficulties, your ship was forced to land at a spot some 200 miles from the rendezvous point. During reentry and landing, much of the equipment aboard was damaged and, since survival depends on reaching the mother ship, the most critical items available must be chosen for the 200-mile trip. Below are listed the 15 items left intact and undamaged after landing. Your task is to rank order them in terms of their importance for your crew in allowing them to reach the rendezvous point. Place the number 1 by the most important item, the number 2 by the second most important, and so on through number 15 for the least important")
)
server <- function(input, output, session) {
renderSurvey()
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
}
shinyApp(ui, server)
}
# Load packages
library(shiny)
library(shinysurveys)
# Register a "check" input type
extendInputType("check", {
shiny::checkboxGroupInput(
inputId = surveyID(),
label = surveyLabel(),
choices = surveyOptions(),
)
})
# Define question in the format of a shinysurvey
ice_cream_question <- data.frame(
question = "Please indicate which of the following are your top three favorite ice cream flavors.",
option = c("Chocolate", "Vanilla", "Strawberry",
"Mint Chocolate Chip", "Rocky Road", "Cookie Batter",
"Hazelnut", "Cookies N' Cream", "Pistachio"),
input_type = "check",
input_id = "favorite_ice_cream",
dependence = NA,
dependence_value = NA,
required = TRUE
)
# Define shiny UI
ui <- fluidPage(
surveyOutput(ice_cream_question,
survey_title = "Hello, World!")
)
# Define shiny server
server <- function(input, output, session) {
renderSurvey()
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
}
# Run the shiny application
shinyApp(ui, server)
# Load packages
library(shiny)
library(shinysurveys)
# Register a "check" input type
extendInputType("check", {
shiny::checkboxGroupInput(
inputId = surveyID(),
label = surveyLabel(),
choices = surveyOptions(),
)
})
# Define question in the format of a shinysurvey
ice_cream_question <- data.frame(
question = "Please indicate which of the following are your top three favorite ice cream flavors.",
option = c("Chocolate", "Vanilla", "Strawberry",
"Mint Chocolate Chip", "Rocky Road", "Cookie Batter",
"Hazelnut", "Cookies N' Cream", "Pistachio"),
input_type = "check",
input_id = "favorite_ice_cream",
dependence = NA,
dependence_value = NA,
required = TRUE
)
# Define shiny UI
ui <- fluidPage(
surveyOutput(ice_cream_question,
survey_title = "Hello, World!")
)
# Define shiny server
server <- function(input, output, session) {
renderSurvey()
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
}
# Run the shiny application
shinyApp(ui, server)
# Load packages
library(shiny)
library(shinysurveys)
# Register a "check" input type
extendInputType("check", {
shiny::checkboxGroupInput(
inputId = surveyID(),
label = surveyLabel(),
choices = surveyOptions(),
)
})
# Define question in the format of a shinysurvey
ice_cream_question <- data.frame(
question = "Please indicate which of the following are your top three favorite ice cream flavors.",
option = c("Chocolate", "Vanilla", "Strawberry",
"Mint Chocolate Chip", "Rocky Road", "Cookie Batter",
"Hazelnut", "Cookies N' Cream", "Pistachio"),
input_type = "check",
input_id = "favorite_ice_cream",
dependence = NA,
dependence_value = NA,
required = TRUE
)
# Define shiny UI
ui <- fluidPage(
surveyOutput(ice_cream_question,
survey_title = "Hello, World!")
)
# Define shiny server
server <- function(input, output, session) {
renderSurvey()
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
}
# Run the shiny application
shinyApp(ui, server)
library(shiny)
library(shinysurveys)
if (interactive()) {
df <- data.frame(
question = c("Session ID:",
"Code name:",
"Group:",
rep("Box of matches", 15),
rep("Food concentrate", 15),
rep("50 feet of nylon rope", 15),
rep("Parachute silk", 15),
rep("Portable heating unit", 15),
rep("Two .45 caliber pistol", 15),
rep("Once case of dehydrated milk", 15),
rep("Two 100 lb. tanks of oxygen", 15),
rep("Stellar map", 15),
rep("Self-inflating life raft", 15),
rep("Magnetic compass", 15),
rep("20 liters of water", 15),
rep("Signal flares", 15),
rep("First aid kit, including injection needle", 15),
rep("Solar-powered FM receiver-transmitter", 15)),
option = c(NA,
NA,
NA,
rep(c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"), 15)),
input_type = c("text",
"text",
"text",
rep("matrix", 225)),
# For matrix questions, the IDs should be the same for each question
# but different for each matrix input unit
input_id = c("session_id", "code_name", "group", rep("nasa_matrix", 225)),
dependence = NA,
dependence_value = NA,
required = FALSE
)
ui <- fluidPage(
surveyOutput(df,
survey_title = "NASA Exercise: Survival on the Moon",
survey_description = "You are a member of a space crew originally scheduled to rendezvous with a mother ship on the lighted surface of the moon. However, due to mechanical difficulties, your ship was forced to land at a spot some 200 miles from the rendezvous point. During reentry and landing, much of the equipment aboard was damaged and, since survival depends on reaching the mother ship, the most critical items available must be chosen for the 200-mile trip. Below are listed the 15 items left intact and undamaged after landing. Your task is to rank order them in terms of their importance for your crew in allowing them to reach the rendezvous point. Place the number 1 by the most important item, the number 2 by the second most important, and so on through number 15 for the least important")
)
server <- function(input, output, session) {
renderSurvey()
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
}
shinyApp(ui, server)
}
library(shiny)
library(shinysurveys)
if (interactive()) {
df <- data.frame(
question = c("Session ID:",
"Code name:",
"Group:",
rep("Box of matches", 15),
rep("Food concentrate", 15),
rep("50 feet of nylon rope", 15),
rep("Parachute silk", 15),
rep("Portable heating unit", 15),
rep("Two .45 caliber pistol", 15),
rep("Once case of dehydrated milk", 15),
rep("Two 100 lb. tanks of oxygen", 15),
rep("Stellar map", 15),
rep("Self-inflating life raft", 15),
rep("Magnetic compass", 15),
rep("20 liters of water", 15),
rep("Signal flares", 15),
rep("First aid kit, including injection needle", 15),
rep("Solar-powered FM receiver-transmitter", 15)),
option = c(NA,
NA,
NA,
rep(c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"), 15)),
input_type = c("text",
"text",
"text",
rep("matrix", 225)),
# For matrix questions, the IDs should be the same for each question
# but different for each matrix input unit
input_id = c("session_id", "code_name", "group", rep("nasa_matrix", 225)),
dependence = NA,
dependence_value = NA,
required = FALSE
)
ui <- fluidPage(
surveyOutput(df,
survey_title = "NASA Exercise: Survival on the Moon",
survey_description = "You are a member of a space crew originally scheduled to rendezvous with a mother ship on the lighted surface of the moon. However, due to mechanical difficulties, your ship was forced to land at a spot some 200 miles from the rendezvous point. During reentry and landing, much of the equipment aboard was damaged and, since survival depends on reaching the mother ship, the most critical items available must be chosen for the 200-mile trip. Below are listed the 15 items left intact and undamaged after landing. Your task is to rank order them in terms of their importance for your crew in allowing them to reach the rendezvous point. Place the number 1 by the most important item, the number 2 by the second most important, and so on through number 15 for the least important")
)
server <- function(input, output, session) {
renderSurvey()
observeEvent(input$submit, {
response_data <- getSurveyData()
print(response_data)
})
}
shinyApp(ui, server)
}
shinyApp(ui, server)
df <- data.frame(
question = c("Session ID:",
"Code name:",
"Group:",
rep("Box of matches", 15),
rep("Food concentrate", 15),
rep("50 feet of nylon rope", 15),
rep("Parachute silk", 15),
rep("Portable heating unit", 15),
rep("Two .45 caliber pistol", 15),
rep("Once case of dehydrated milk", 15),
rep("Two 100 lb. tanks of oxygen", 15),
rep("Stellar map", 15),
rep("Self-inflating life raft", 15),
rep("Magnetic compass", 15),
rep("20 liters of water", 15),
rep("Signal flares", 15),
rep("First aid kit, including injection needle", 15),
rep("Solar-powered FM receiver-transmitter", 15)),
option = c(NA,
NA,
NA,
rep(c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"), 15)),
input_type = c("text",
"text",
"text",
rep("matrix", 225)),
# For matrix questions, the IDs should be the same for each question
# but different for each matrix input unit
input_id = c("session_id", "code_name", "group", rep("nasa_matrix", 225)),
dependence = NA,
dependence_value = NA,
required = FALSE
)
